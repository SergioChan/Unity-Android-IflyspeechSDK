apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
//        applicationId "com.raventech.xftest"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    task makeJar(type: Copy) {
        //删除存在的
        delete 'build/libs/myjar.jar'
        //设置拷贝的文件
        from('build/intermediates/bundles/debug/')
        //打进jar包后的文件目录
        into('build/libs/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename ('classes.jar', 'myjar.jar')
    }

    makeJar.dependsOn(build)

    sourceSets {
        main {
            jniLibs.srcDirs = []
        }
    }
//    task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
//        destinationDir file("$buildDir/native-libs")
//        baseName 'native-libs'
//        extension 'jar'
//        from fileTree(dir: 'libs', include: '**/*.so')
//        into 'lib/'
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn(nativeLibsToJar)
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'], exclude: ['classes.jar'])
    provided files('libs/classes.jar')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}
